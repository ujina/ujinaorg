{"remainingRequest":"/Users/toruogasawara/GitHub/ujinaorg/docs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/toruogasawara/GitHub/ujinaorg/docs/src/.vuepress/components/BlogIndex.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/toruogasawara/GitHub/ujinaorg/docs/src/.vuepress/components/BlogIndex.vue","mtime":1699404943762},{"path":"/Users/toruogasawara/GitHub/ujinaorg/docs/node_modules/cache-loader/dist/cjs.js","mtime":1699522614166},{"path":"/Users/toruogasawara/GitHub/ujinaorg/docs/node_modules/babel-loader/lib/index.js","mtime":1699522613302},{"path":"/Users/toruogasawara/GitHub/ujinaorg/docs/node_modules/cache-loader/dist/cjs.js","mtime":1699522614166},{"path":"/Users/toruogasawara/GitHub/ujinaorg/docs/node_modules/vue-loader/lib/index.js","mtime":1699522614670}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgZXhwb3J0IGRlZmF1bHQgewogICAgY29tcHV0ZWQ6IHsKICAgICAgcG9zdHMoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHNpdGUucGFnZXMKICAgICAgICAgIC5maWx0ZXIgKAogICAgICAgICAgICAgICAgICAgICAgICAoeCkgPT4geC5wYXRoLnN0YXJ0c1dpdGgoJy9ibG9nLycpICYmICF4LmZyb250bWF0dGVyLmJsb2dfaW5kZXgKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgLy8ocGFnZSA9PiBwYWdlLnBhdGguc3RhcnRzV2l0aCgnL2Jsb2cvJykpCiAgICAgICAgICAuc29ydCAoKGEsIGIpID0+IGIuZnJvbnRtYXR0ZXIucG9zdElkIC0gYS5mcm9udG1hdHRlci5wb3N0SWQpOwogICAgICB9CiAgICB9CiAgfQogIA=="},{"version":3,"sources":["BlogIndex.vue"],"names":[],"mappings":";AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"BlogIndex.vue","sourceRoot":"src/.vuepress/components","sourcesContent":["<template>\n    <div>\n      <div v-for=\"post in posts\">\n        <h2>\n          <router-link :to=\"post.path\">{{post.frontmatter.title}}</router-link>\n        </h2>\n        \n  <div>{{post.frontmatter.description}}</div> \n\n        <p>\n          <router-link :to=\"post.path\">Read More</router-link>\n        </p>\n      </div>\n    </div>\n  </template>\n  <script>\n  export default {\n    computed: {\n      posts() {\n        return this.$site.pages\n          .filter (\n                        (x) => x.path.startsWith('/blog/') && !x.frontmatter.blog_index\n                    )\n                    \n                    //(page => page.path.startsWith('/blog/'))\n          .sort ((a, b) => b.frontmatter.postId - a.frontmatter.postId);\n      }\n    }\n  }\n  </script>"]}]}